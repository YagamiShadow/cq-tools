#!/usr/bin/env ruby

require 'rubygems'
require 'json'
require 'open-uri'
require 'nokogiri'
require_relative 'cq_common'
require_relative 'cq_configuration'

module CqTools
  module Clean

    # Get all keys from hash recursively
    def self.nested_keys(hash)
      keys = []
      hash.keys.each { |key|
        if hash[key].is_a? Hash
          keys += nested_keys(hash[key])
        end
        keys << key
      }
      keys
    end

    def self.exec

      # TODO wrap the configuration into an object ...

      config = Configuration::read_config
      verbose = Common::to_bool(config['debug'])
      host = Configuration::configured_host(config)
      user = Configuration::configured_user(config)
      pass = Configuration::configured_pass(config)
      workspace = Configuration::workspace(config)
      clean_opts = workspace['clean']
      nodes = clean_opts['nodes']

      # Find packages to remove based on bundle patterns
      bundles = []
      pkg_xml = Nokogiri::XML(open("#{host}/crx/packmgr/service.jsp?cmd=ls", :http_basic_authentication => [user, pass]).read)
      pkg_xml.xpath('//package').each {|package|
        name = (package > 'name/text()').text
        group = (package > 'group/text()').text
        clean_opts['bundles'].each {|bundle|
          bundles.push(bundle) if name.eql? bundle['name'] and group.eql? bundle['group']
        }
      }

      puts '=-=-=-=-=-=-=-=-=-=-=-=-=-=-='
      puts 'Nodes to delete:'
      puts '=-=-=-=-=-=-=-=-=-=-=-=-=-=-='
      puts nodes
      puts ''
      puts '=-=-=-=-=-=-=-=-=-=-=-=-=-=-='
      puts 'Bundles to delete:'
      puts '=-=-=-=-=-=-=-=-=-=-=-=-=-=-='
      puts bundles
      puts ''
      puts 'Continue (y/n)?'

      yn = gets.chomp
      if yn !~ /[y|yes]/i
        puts 'Quiting'
        exit
      end

      v = ''
      if verbose
        v = '-v'
      end

      # Remove the packages
      commands = %w(uninstall delete)
      bundles.each { |bundle|
        group = bundle['group']
        name = bundle['name']
        path = (group.nil? || group.empty?) ? "#{name}" : "#{group}/#{name}"
        commands.each { |cmd|
          `curl #{v} -X POST -H 'referer: app:/' -u #{user}:#{pass} -F cmd=#{cmd} #{host}/crx/packmgr/service/script.html/etc/packages/#{path}`
        }
      }

      # Remove the nodes
      nodes.each { |path|
        `curl #{v} -H 'referer: app:/' -F":operation=delete" #{host}#{path} -u #{user}:#{pass}`
      }

      puts 'Done'
    end

  end
end

CqTools::Clean::exec
